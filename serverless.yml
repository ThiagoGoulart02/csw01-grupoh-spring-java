service: spring-boot-serverless-api
plugins:
  - serverless-offline

provider:
  name: aws
  runtime: java17
  region: us-east-1
  stage: api
  timeout: 30
  stackName: spring-boot-serverless-api-dev
  iam:
    role: ${env:AWS_ROLE}
  environment:
    SPRING_DATASOURCE_URL: ${env:SPRING_DATASOURCE_URL}
    SPRING_DATASOURCE_USERNAME: ${env:SPRING_DATASOURCE_USERNAME}
    SPRING_DATASOURCE_PASSWORD: ${env:SPRING_DATASOURCE_PASSWORD}


package:
  artifact: target/csw-0.0.1.jar

functions:
  api:
    handler: csw.t1.csw.LambdaHandler::handleRequest
    events:
      - http:
          method: any
          path: /{proxy+}

resources:
  Resources:
    MyRDSInstance:
      Type: AWS::RDS::DBInstance
      Properties:
        DBInstanceIdentifier: spring-boot-serverless-db
        AllocatedStorage: 20
        DBInstanceClass: db.t3.micro
        EngineVersion: "14.10"
        PubliclyAccessible: true
        Engine: postgres
        MasterUsername: csww
        MasterUserPassword: password
        DBName: mydatabasee
  Outputs:
    RDSInstanceEndpoint:
      Value:
        Fn::GetAtt: [MyRDSInstance, Endpoint.Address]
      Export:
        Name: MyRDSInstanceEndpoint
